{"id":"../node_modules/mapbox/lib/services/matching.js","dependencies":[{"name":"C:\\Users\\nicol\\apx-dwf\\dwf-m7\\pet-finder-nicolascasmuz\\package.json","includedInParent":true,"mtime":1710894159098},{"name":"C:\\Users\\nicol\\apx-dwf\\dwf-m7\\pet-finder-nicolascasmuz\\node_modules\\mapbox\\package.json","includedInParent":true,"mtime":1710894049971},{"name":"../../vendor/invariant","loc":{"line":3,"column":24,"index":39},"parent":"C:\\Users\\nicol\\apx-dwf\\dwf-m7\\pet-finder-nicolascasmuz\\node_modules\\mapbox\\lib\\services\\matching.js","resolved":"C:\\Users\\nicol\\apx-dwf\\dwf-m7\\pet-finder-nicolascasmuz\\node_modules\\mapbox\\vendor\\invariant.js"},{"name":"../make_service","loc":{"line":4,"column":26,"index":92},"parent":"C:\\Users\\nicol\\apx-dwf\\dwf-m7\\pet-finder-nicolascasmuz\\node_modules\\mapbox\\lib\\services\\matching.js","resolved":"C:\\Users\\nicol\\apx-dwf\\dwf-m7\\pet-finder-nicolascasmuz\\node_modules\\mapbox\\lib\\make_service.js"}],"generated":{"js":"'use strict';\n\nvar invariant = require('../../vendor/invariant');\nvar makeService = require('../make_service');\n\n/**\n * @class MapboxMatching\n */\nvar MapboxMatching = makeService('MapboxMatching');\n\nvar API_MATCHING = '/matching/v5/{account}/{profile}/{coordinates}.json{?access_token,geometries,radiuses,steps,overview,timestamps,annotations}';\n\n/**\n * Snap recorded location traces to roads and paths from OpenStreetMap.\n * Consult the [Map Matching API](https://www.mapbox.com/api-documentation/#map-matching)\n * for more documentation.\n *\n * @param {Array<Array<number>>} coordinates an array of coordinate pairs\n * in [longitude, latitude] order. Up to 100 coordinates can be specified.\n * @param {Object} [options={}] additional options meant to tune\n * the request\n * @param {string} [options.profile=driving] the directions\n * profile, which determines how to prioritize different routes.\n * Options are `'driving'`, which assumes transportation via an\n * automobile and will use highways, `'walking'`, which avoids\n * streets without sidewalks, and `'cycling'`, which prefers streets\n * with bicycle lanes and lower speed limits for transportation via\n * bicycle.\n * @param {string} [options.geometries=geojson] format of the returned geometry.\n * Allowed values are: `'geojson'` (as LineString), `'polyline'` with\n * precision 5, `'polyline6'`. `'polyline'` yields more compact responses which\n * can be decoded on the client side. [GeoJSON](http://geojson.org/), the\n * default, is compatible with libraries like\n * [Mapbox GL](https://www.mapbox.com/mapbox-gl/), Leaflet and\n * [Mapbox.js](https://www.mapbox.com/mapbox.js/).\n * @param {Array<number>} [options.radiuses] an array of integers in meters\n * indicating the assumed precision of the used tracking device. There must be\n * as many radiuses as there are coordinates in the request. Values can be a\n * number between 0 and 30. Use higher numbers (20-30) for noisy traces and\n * lower numbers (1-10) for clean traces. The default value is 5.\n * @param {boolean} [options.steps=false] Whether to return steps and\n * turn-by-turn instructions. Can be `true` or `false`.\n * @param {string|boolean} [options.overview=simplified] type of returned\n * overview geometry. Can be `'full'` (the most detailed geometry available),\n * `'simplified'` (a simplified version of the full geometry), or `false`.\n * @param {Array<number>} [options.timestamps] an array of timestamps\n * corresponding to each coordinate provided in the request; must be numbers in\n * [Unix time](https://en.wikipedia.org/wiki/Unix_time)\n * (seconds since the Unix epoch). There must be as many timestamps as there\n * are coordinates in the request.\n * @param {Array<string>} [options.annotations] an array of fields that return\n * additional metadata for each coordinate along the match geometry. Can be any\n * of `'duration'`, `'distance'`, or `'nodes'`.\n * @param {Function} callback called with (err, results)\n * @returns {Promise} response\n * @example\n * var mapboxClient = new MapboxClient('ACCESSTOKEN');\n * mapboxClient.matching([\n *   [-95.4431142, 33.6875431],\n *   [-95.0431142, 33.6875431],\n *   [-95.0431142, 33.0875431],\n *   [-95.0431142, 33.0175431],\n *   [-95.4831142, 33.6875431]\n * ], {\n *  overview: 'full'\n * }, function(err, res) {\n *   // res is a match response object\n * });\n */\nMapboxMatching.prototype.matching = function(coordinates, options, callback) {\n\n  // permit the options argument to be omitted\n  if (callback === undefined && typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  // typecheck arguments\n  invariant(Array.isArray(coordinates), 'coordinates must be an array');\n\n  var params = {\n    profile: 'driving',\n    account: 'mapbox',\n    geometries: 'geojson',\n    coordinates: coordinates.join(';')\n  };\n\n  if (options.profile) {\n    invariant(typeof options.profile === 'string', 'profile option must be string');\n    params.profile = options.profile;\n  }\n\n  var allowedGeometries = ['polyline', 'geojson'];\n  if (options.geometries) {\n    invariant(allowedGeometries.indexOf(options.geometries) !== -1, 'geometries option must be ' + allowedGeometries);\n    params.geometries = options.geometries;\n  }\n\n  if (options.radiuses) {\n    invariant(Array.isArray(options.radiuses), 'radiuses must be an array');\n    invariant(options.radiuses.length === coordinates.length, 'There must be as many radiuses as there are coordinates in the request');\n    params.radiuses = options.radiuses.join(';');\n  }\n\n  if (typeof options.steps !== 'undefined') {\n    invariant(typeof options.steps === 'boolean', 'steps option must be boolean');\n    params.steps = options.steps;\n  }\n\n  var allowedOverview = ['full', 'simplified'];\n  if (typeof options.overview !== 'undefined') {\n    invariant(allowedOverview.indexOf(options.overview) !== -1 || options.overview === false, 'overview option must be ' + allowedOverview + ' or false');\n    params.overview = options.overview;\n  }\n\n  if (options.timestamps) {\n    invariant(Array.isArray(options.timestamps), 'timestamps must be an array');\n    invariant(options.timestamps.length === coordinates.length, 'There must be as many timestamps as there are coordinates in the request');\n    params.timestamps = options.timestamps.join(';');\n  }\n\n  if (options.annotations) {\n    invariant(Array.isArray(options.annotations), 'annotations must be an array');\n    params.annotations = options.annotations.join();\n  }\n\n  return this.client({\n    path: API_MATCHING,\n    params: params,\n    method: 'get',\n    callback: callback\n  });\n};\n\nmodule.exports = MapboxMatching;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/mapbox/lib/services/matching.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}}],"sources":{"../node_modules/mapbox/lib/services/matching.js":"'use strict';\n\nvar invariant = require('../../vendor/invariant');\nvar makeService = require('../make_service');\n\n/**\n * @class MapboxMatching\n */\nvar MapboxMatching = makeService('MapboxMatching');\n\nvar API_MATCHING = '/matching/v5/{account}/{profile}/{coordinates}.json{?access_token,geometries,radiuses,steps,overview,timestamps,annotations}';\n\n/**\n * Snap recorded location traces to roads and paths from OpenStreetMap.\n * Consult the [Map Matching API](https://www.mapbox.com/api-documentation/#map-matching)\n * for more documentation.\n *\n * @param {Array<Array<number>>} coordinates an array of coordinate pairs\n * in [longitude, latitude] order. Up to 100 coordinates can be specified.\n * @param {Object} [options={}] additional options meant to tune\n * the request\n * @param {string} [options.profile=driving] the directions\n * profile, which determines how to prioritize different routes.\n * Options are `'driving'`, which assumes transportation via an\n * automobile and will use highways, `'walking'`, which avoids\n * streets without sidewalks, and `'cycling'`, which prefers streets\n * with bicycle lanes and lower speed limits for transportation via\n * bicycle.\n * @param {string} [options.geometries=geojson] format of the returned geometry.\n * Allowed values are: `'geojson'` (as LineString), `'polyline'` with\n * precision 5, `'polyline6'`. `'polyline'` yields more compact responses which\n * can be decoded on the client side. [GeoJSON](http://geojson.org/), the\n * default, is compatible with libraries like\n * [Mapbox GL](https://www.mapbox.com/mapbox-gl/), Leaflet and\n * [Mapbox.js](https://www.mapbox.com/mapbox.js/).\n * @param {Array<number>} [options.radiuses] an array of integers in meters\n * indicating the assumed precision of the used tracking device. There must be\n * as many radiuses as there are coordinates in the request. Values can be a\n * number between 0 and 30. Use higher numbers (20-30) for noisy traces and\n * lower numbers (1-10) for clean traces. The default value is 5.\n * @param {boolean} [options.steps=false] Whether to return steps and\n * turn-by-turn instructions. Can be `true` or `false`.\n * @param {string|boolean} [options.overview=simplified] type of returned\n * overview geometry. Can be `'full'` (the most detailed geometry available),\n * `'simplified'` (a simplified version of the full geometry), or `false`.\n * @param {Array<number>} [options.timestamps] an array of timestamps\n * corresponding to each coordinate provided in the request; must be numbers in\n * [Unix time](https://en.wikipedia.org/wiki/Unix_time)\n * (seconds since the Unix epoch). There must be as many timestamps as there\n * are coordinates in the request.\n * @param {Array<string>} [options.annotations] an array of fields that return\n * additional metadata for each coordinate along the match geometry. Can be any\n * of `'duration'`, `'distance'`, or `'nodes'`.\n * @param {Function} callback called with (err, results)\n * @returns {Promise} response\n * @example\n * var mapboxClient = new MapboxClient('ACCESSTOKEN');\n * mapboxClient.matching([\n *   [-95.4431142, 33.6875431],\n *   [-95.0431142, 33.6875431],\n *   [-95.0431142, 33.0875431],\n *   [-95.0431142, 33.0175431],\n *   [-95.4831142, 33.6875431]\n * ], {\n *  overview: 'full'\n * }, function(err, res) {\n *   // res is a match response object\n * });\n */\nMapboxMatching.prototype.matching = function(coordinates, options, callback) {\n\n  // permit the options argument to be omitted\n  if (callback === undefined && typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  // typecheck arguments\n  invariant(Array.isArray(coordinates), 'coordinates must be an array');\n\n  var params = {\n    profile: 'driving',\n    account: 'mapbox',\n    geometries: 'geojson',\n    coordinates: coordinates.join(';')\n  };\n\n  if (options.profile) {\n    invariant(typeof options.profile === 'string', 'profile option must be string');\n    params.profile = options.profile;\n  }\n\n  var allowedGeometries = ['polyline', 'geojson'];\n  if (options.geometries) {\n    invariant(allowedGeometries.indexOf(options.geometries) !== -1, 'geometries option must be ' + allowedGeometries);\n    params.geometries = options.geometries;\n  }\n\n  if (options.radiuses) {\n    invariant(Array.isArray(options.radiuses), 'radiuses must be an array');\n    invariant(options.radiuses.length === coordinates.length, 'There must be as many radiuses as there are coordinates in the request');\n    params.radiuses = options.radiuses.join(';');\n  }\n\n  if (typeof options.steps !== 'undefined') {\n    invariant(typeof options.steps === 'boolean', 'steps option must be boolean');\n    params.steps = options.steps;\n  }\n\n  var allowedOverview = ['full', 'simplified'];\n  if (typeof options.overview !== 'undefined') {\n    invariant(allowedOverview.indexOf(options.overview) !== -1 || options.overview === false, 'overview option must be ' + allowedOverview + ' or false');\n    params.overview = options.overview;\n  }\n\n  if (options.timestamps) {\n    invariant(Array.isArray(options.timestamps), 'timestamps must be an array');\n    invariant(options.timestamps.length === coordinates.length, 'There must be as many timestamps as there are coordinates in the request');\n    params.timestamps = options.timestamps.join(';');\n  }\n\n  if (options.annotations) {\n    invariant(Array.isArray(options.annotations), 'annotations must be an array');\n    params.annotations = options.annotations.join();\n  }\n\n  return this.client({\n    path: API_MATCHING,\n    params: params,\n    method: 'get',\n    callback: callback\n  });\n};\n\nmodule.exports = MapboxMatching;\n"},"lineCount":136}},"error":null,"hash":"6a789b49bfb1425a6a66362f900f7c16","cacheData":{"env":{}}}