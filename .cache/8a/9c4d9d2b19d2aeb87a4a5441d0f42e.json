{"id":"../node_modules/mapbox/lib/services/uploads.js","dependencies":[{"name":"C:\\Users\\nicol\\apx-dwf\\dwf-m7\\pet-finder-nicolascasmuz\\package.json","includedInParent":true,"mtime":1710894159098},{"name":"C:\\Users\\nicol\\apx-dwf\\dwf-m7\\pet-finder-nicolascasmuz\\node_modules\\mapbox\\package.json","includedInParent":true,"mtime":1710894049971},{"name":"../../vendor/invariant","loc":{"line":3,"column":24,"index":39},"parent":"C:\\Users\\nicol\\apx-dwf\\dwf-m7\\pet-finder-nicolascasmuz\\node_modules\\mapbox\\lib\\services\\uploads.js","resolved":"C:\\Users\\nicol\\apx-dwf\\dwf-m7\\pet-finder-nicolascasmuz\\node_modules\\mapbox\\vendor\\invariant.js"},{"name":"../make_service","loc":{"line":4,"column":26,"index":92},"parent":"C:\\Users\\nicol\\apx-dwf\\dwf-m7\\pet-finder-nicolascasmuz\\node_modules\\mapbox\\lib\\services\\uploads.js","resolved":"C:\\Users\\nicol\\apx-dwf\\dwf-m7\\pet-finder-nicolascasmuz\\node_modules\\mapbox\\lib\\make_service.js"}],"generated":{"js":"'use strict';\n\nvar invariant = require('../../vendor/invariant');\nvar makeService = require('../make_service');\n\n/**\n * @class MapboxUploads\n */\nvar MapboxUploads = module.exports = makeService('MapboxUploads');\n\nvar API_UPLOADS = '/uploads/v1/{owner}{?access_token}';\nvar API_UPLOAD = '/uploads/v1/{owner}/{upload}{?access_token}';\nvar API_UPLOAD_CREDENTIALS = '/uploads/v1/{owner}/credentials{?access_token}';\n\n/**\n * Retrieve a listing of uploads for a particular account.\n *\n * This request requires an access token with the uploads:list scope.\n *\n * @param {Function} callback called with (err, uploads)\n * @returns {Promise} response\n * @example\n * var mapboxClient = new MapboxClient('ACCESSTOKEN');\n * mapboxClient.listUploads(function(err, uploads) {\n *   console.log(uploads);\n *   // [\n *   //   {\n *   //     \"complete\": true,\n *   //     \"tileset\": \"example.mbtiles\",\n *   //     \"error\": null,\n *   //     \"id\": \"abc123\",\n *   //     \"modified\": \"2014-11-21T19:41:10.000Z\",\n *   //     \"created\": \"2014-11-21T19:41:10.000Z\",\n *   //     \"owner\": \"example\",\n *   //     \"progress\": 1\n *   //   },\n *   //   {\n *   //     \"complete\": false,\n *   //     \"tileset\": \"example.foo\",\n *   //     \"error\": null,\n *   //     \"id\": \"xyz789\",\n *   //     \"modified\": \"2014-11-21T19:41:10.000Z\",\n *   //     \"created\": \"2014-11-21T19:41:10.000Z\",\n *   //     \"owner\": \"example\",\n *   //     \"progress\": 0\n *   //   }\n *   // ]\n * });\n */\nMapboxUploads.prototype.listUploads = function(callback) {\n  return this.client({\n    path: API_UPLOADS,\n    params: { owner: this.owner },\n    callback: callback\n  });\n};\n\n/**\n * Retrieve credentials that allow a new file to be staged on Amazon S3\n * while an upload is processed. All uploads must be staged using these\n * credentials before being uploaded to Mapbox.\n *\n * This request requires an access token with the uploads:write scope.\n *\n * @param {Function} callback called with (err, credentials)\n * @returns {Promise} response\n * @example\n * var mapboxClient = new MapboxClient('ACCESSTOKEN');\n * mapboxClient.createUploadCredentials(function(err, credentials) {\n *   console.log(credentials);\n *   // {\n *   //   \"accessKeyId\": \"{accessKeyId}\",\n *   //   \"bucket\": \"somebucket\",\n *   //   \"key\": \"hij456\",\n *   //   \"secretAccessKey\": \"{secretAccessKey}\",\n *   //   \"sessionToken\": \"{sessionToken}\",\n *   //   \"url\": \"{s3 url}\"\n *   // }\n *\n *   // Use aws-sdk to stage the file on Amazon S3\n *   var AWS = require('aws-sdk');\n *   var s3 = new AWS.S3({\n *        accessKeyId: credentials.accessKeyId,\n *        secretAccessKey: credentials.secretAccessKey,\n *        sessionToken: credentials.sessionToken,\n *        region: 'us-east-1'\n *   });\n *   s3.putObject({\n *     Bucket: credentials.bucket,\n *     Key: credentials.key,\n *     Body: fs.createReadStream('/path/to/file.mbtiles')\n *   }, function(err, resp) {\n *   });\n * });\n */\nMapboxUploads.prototype.createUploadCredentials = function(callback) {\n  return this.client({\n    path: API_UPLOAD_CREDENTIALS,\n    params: { owner: this.owner },\n    method: 'post',\n    callback: callback\n  });\n};\n\n/**\n * Create an new upload with a file previously staged on Amazon S3.\n *\n * This request requires an access token with the uploads:write scope.\n *\n * @param {Object} options an object that defines the upload's properties\n * @param {String} options.tileset id of the tileset to create or\n * replace. This must consist of an account id and a unique key\n * separated by a period. Reuse of a tileset value will overwrite\n * existing data. To avoid overwriting existing data, you must ensure\n * that you are using unique tileset ids.\n * @param {String} options.url https url of a file staged on Amazon S3.\n * @param {Function} callback called with (err, upload)\n * @returns {Promise} response\n * @example\n * var mapboxClient = new MapboxClient('ACCESSTOKEN');\n * // Response from a call to createUploadCredentials\n * var credentials = {\n *   \"accessKeyId\": \"{accessKeyId}\",\n *   \"bucket\": \"somebucket\",\n *   \"key\": \"hij456\",\n *   \"secretAccessKey\": \"{secretAccessKey}\",\n *   \"sessionToken\": \"{sessionToken}\",\n *   \"url\": \"{s3 url}\"\n * };\n * mapboxClient.createUpload({\n *    tileset: [accountid, 'mytileset'].join('.'),\n *    url: credentials.url\n * }, function(err, upload) {\n *   console.log(upload);\n *   // {\n *   //   \"complete\": false,\n *   //   \"tileset\": \"example.markers\",\n *   //   \"error\": null,\n *   //   \"id\": \"hij456\",\n *   //   \"modified\": \"2014-11-21T19:41:10.000Z\",\n *   //   \"created\": \"2014-11-21T19:41:10.000Z\",\n *   //   \"owner\": \"example\",\n *   //   \"progress\": 0\n *   // }\n * });\n */\nMapboxUploads.prototype.createUpload = function(options, callback) {\n  invariant(typeof options === 'object', 'options must be an object');\n\n  return this.client({\n    path: API_UPLOADS,\n    params: { owner: this.owner },\n    entity: options,\n    callback: callback\n  });\n};\n\n/**\n * Retrieve state of an upload.\n *\n * This request requires an access token with the uploads:read scope.\n *\n * @param {String} upload id of the upload to read\n * @param {Function} callback called with (err, upload)\n * @returns {Promise} response\n * @example\n * var mapboxClient = new MapboxClient('ACCESSTOKEN');\n * mapboxClient.readUpload('hij456', function(err, upload) {\n *   console.log(upload);\n *   // {\n *   //   \"complete\": true,\n *   //   \"tileset\": \"example.markers\",\n *   //   \"error\": null,\n *   //   \"id\": \"hij456\",\n *   //   \"modified\": \"2014-11-21T19:41:10.000Z\",\n *   //   \"created\": \"2014-11-21T19:41:10.000Z\",\n *   //   \"owner\": \"example\",\n *   //   \"progress\": 1\n *   // }\n * });\n */\nMapboxUploads.prototype.readUpload = function(upload, callback) {\n  invariant(typeof upload === 'string', 'upload must be a string');\n\n  return this.client({\n    path: API_UPLOAD,\n    params: {\n      owner: this.owner,\n      upload: upload\n    },\n    callback: callback\n  });\n};\n\n/**\n * Delete a completed upload. In-progress uploads cannot be deleted.\n *\n * This request requires an access token with the uploads:delete scope.\n *\n * @param {string} upload upload identifier\n * @param {Function} callback called with (err)\n * @returns {Promise} response\n * @example\n * var mapboxClient = new MapboxClient('ACCESSTOKEN');\n * mapboxClient.deleteUpload('hij456', function(err) {\n * });\n */\nMapboxUploads.prototype.deleteUpload = function(upload, callback) {\n  invariant(typeof upload === 'string', 'upload must be a string');\n\n  return this.client({\n    method: 'delete',\n    path: API_UPLOAD,\n    params: {\n      owner: this.owner,\n      upload: upload\n    },\n    callback: callback\n  });\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/mapbox/lib/services/uploads.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}}],"sources":{"../node_modules/mapbox/lib/services/uploads.js":"'use strict';\n\nvar invariant = require('../../vendor/invariant');\nvar makeService = require('../make_service');\n\n/**\n * @class MapboxUploads\n */\nvar MapboxUploads = module.exports = makeService('MapboxUploads');\n\nvar API_UPLOADS = '/uploads/v1/{owner}{?access_token}';\nvar API_UPLOAD = '/uploads/v1/{owner}/{upload}{?access_token}';\nvar API_UPLOAD_CREDENTIALS = '/uploads/v1/{owner}/credentials{?access_token}';\n\n/**\n * Retrieve a listing of uploads for a particular account.\n *\n * This request requires an access token with the uploads:list scope.\n *\n * @param {Function} callback called with (err, uploads)\n * @returns {Promise} response\n * @example\n * var mapboxClient = new MapboxClient('ACCESSTOKEN');\n * mapboxClient.listUploads(function(err, uploads) {\n *   console.log(uploads);\n *   // [\n *   //   {\n *   //     \"complete\": true,\n *   //     \"tileset\": \"example.mbtiles\",\n *   //     \"error\": null,\n *   //     \"id\": \"abc123\",\n *   //     \"modified\": \"2014-11-21T19:41:10.000Z\",\n *   //     \"created\": \"2014-11-21T19:41:10.000Z\",\n *   //     \"owner\": \"example\",\n *   //     \"progress\": 1\n *   //   },\n *   //   {\n *   //     \"complete\": false,\n *   //     \"tileset\": \"example.foo\",\n *   //     \"error\": null,\n *   //     \"id\": \"xyz789\",\n *   //     \"modified\": \"2014-11-21T19:41:10.000Z\",\n *   //     \"created\": \"2014-11-21T19:41:10.000Z\",\n *   //     \"owner\": \"example\",\n *   //     \"progress\": 0\n *   //   }\n *   // ]\n * });\n */\nMapboxUploads.prototype.listUploads = function(callback) {\n  return this.client({\n    path: API_UPLOADS,\n    params: { owner: this.owner },\n    callback: callback\n  });\n};\n\n/**\n * Retrieve credentials that allow a new file to be staged on Amazon S3\n * while an upload is processed. All uploads must be staged using these\n * credentials before being uploaded to Mapbox.\n *\n * This request requires an access token with the uploads:write scope.\n *\n * @param {Function} callback called with (err, credentials)\n * @returns {Promise} response\n * @example\n * var mapboxClient = new MapboxClient('ACCESSTOKEN');\n * mapboxClient.createUploadCredentials(function(err, credentials) {\n *   console.log(credentials);\n *   // {\n *   //   \"accessKeyId\": \"{accessKeyId}\",\n *   //   \"bucket\": \"somebucket\",\n *   //   \"key\": \"hij456\",\n *   //   \"secretAccessKey\": \"{secretAccessKey}\",\n *   //   \"sessionToken\": \"{sessionToken}\",\n *   //   \"url\": \"{s3 url}\"\n *   // }\n *\n *   // Use aws-sdk to stage the file on Amazon S3\n *   var AWS = require('aws-sdk');\n *   var s3 = new AWS.S3({\n *        accessKeyId: credentials.accessKeyId,\n *        secretAccessKey: credentials.secretAccessKey,\n *        sessionToken: credentials.sessionToken,\n *        region: 'us-east-1'\n *   });\n *   s3.putObject({\n *     Bucket: credentials.bucket,\n *     Key: credentials.key,\n *     Body: fs.createReadStream('/path/to/file.mbtiles')\n *   }, function(err, resp) {\n *   });\n * });\n */\nMapboxUploads.prototype.createUploadCredentials = function(callback) {\n  return this.client({\n    path: API_UPLOAD_CREDENTIALS,\n    params: { owner: this.owner },\n    method: 'post',\n    callback: callback\n  });\n};\n\n/**\n * Create an new upload with a file previously staged on Amazon S3.\n *\n * This request requires an access token with the uploads:write scope.\n *\n * @param {Object} options an object that defines the upload's properties\n * @param {String} options.tileset id of the tileset to create or\n * replace. This must consist of an account id and a unique key\n * separated by a period. Reuse of a tileset value will overwrite\n * existing data. To avoid overwriting existing data, you must ensure\n * that you are using unique tileset ids.\n * @param {String} options.url https url of a file staged on Amazon S3.\n * @param {Function} callback called with (err, upload)\n * @returns {Promise} response\n * @example\n * var mapboxClient = new MapboxClient('ACCESSTOKEN');\n * // Response from a call to createUploadCredentials\n * var credentials = {\n *   \"accessKeyId\": \"{accessKeyId}\",\n *   \"bucket\": \"somebucket\",\n *   \"key\": \"hij456\",\n *   \"secretAccessKey\": \"{secretAccessKey}\",\n *   \"sessionToken\": \"{sessionToken}\",\n *   \"url\": \"{s3 url}\"\n * };\n * mapboxClient.createUpload({\n *    tileset: [accountid, 'mytileset'].join('.'),\n *    url: credentials.url\n * }, function(err, upload) {\n *   console.log(upload);\n *   // {\n *   //   \"complete\": false,\n *   //   \"tileset\": \"example.markers\",\n *   //   \"error\": null,\n *   //   \"id\": \"hij456\",\n *   //   \"modified\": \"2014-11-21T19:41:10.000Z\",\n *   //   \"created\": \"2014-11-21T19:41:10.000Z\",\n *   //   \"owner\": \"example\",\n *   //   \"progress\": 0\n *   // }\n * });\n */\nMapboxUploads.prototype.createUpload = function(options, callback) {\n  invariant(typeof options === 'object', 'options must be an object');\n\n  return this.client({\n    path: API_UPLOADS,\n    params: { owner: this.owner },\n    entity: options,\n    callback: callback\n  });\n};\n\n/**\n * Retrieve state of an upload.\n *\n * This request requires an access token with the uploads:read scope.\n *\n * @param {String} upload id of the upload to read\n * @param {Function} callback called with (err, upload)\n * @returns {Promise} response\n * @example\n * var mapboxClient = new MapboxClient('ACCESSTOKEN');\n * mapboxClient.readUpload('hij456', function(err, upload) {\n *   console.log(upload);\n *   // {\n *   //   \"complete\": true,\n *   //   \"tileset\": \"example.markers\",\n *   //   \"error\": null,\n *   //   \"id\": \"hij456\",\n *   //   \"modified\": \"2014-11-21T19:41:10.000Z\",\n *   //   \"created\": \"2014-11-21T19:41:10.000Z\",\n *   //   \"owner\": \"example\",\n *   //   \"progress\": 1\n *   // }\n * });\n */\nMapboxUploads.prototype.readUpload = function(upload, callback) {\n  invariant(typeof upload === 'string', 'upload must be a string');\n\n  return this.client({\n    path: API_UPLOAD,\n    params: {\n      owner: this.owner,\n      upload: upload\n    },\n    callback: callback\n  });\n};\n\n/**\n * Delete a completed upload. In-progress uploads cannot be deleted.\n *\n * This request requires an access token with the uploads:delete scope.\n *\n * @param {string} upload upload identifier\n * @param {Function} callback called with (err)\n * @returns {Promise} response\n * @example\n * var mapboxClient = new MapboxClient('ACCESSTOKEN');\n * mapboxClient.deleteUpload('hij456', function(err) {\n * });\n */\nMapboxUploads.prototype.deleteUpload = function(upload, callback) {\n  invariant(typeof upload === 'string', 'upload must be a string');\n\n  return this.client({\n    method: 'delete',\n    path: API_UPLOAD,\n    params: {\n      owner: this.owner,\n      upload: upload\n    },\n    callback: callback\n  });\n};\n"},"lineCount":221}},"error":null,"hash":"83792768338ded76c68d70e020e20f0f","cacheData":{"env":{}}}