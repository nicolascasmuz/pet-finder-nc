{"id":"../node_modules/mapbox/vendor/hat.js","dependencies":[{"name":"C:\\Users\\nicol\\apx-dwf\\dwf-m7\\pet-finder-nicolascasmuz\\package.json","includedInParent":true,"mtime":1710894159098},{"name":"C:\\Users\\nicol\\apx-dwf\\dwf-m7\\pet-finder-nicolascasmuz\\node_modules\\mapbox\\package.json","includedInParent":true,"mtime":1710894049971}],"generated":{"js":"/* eslint-disable */\n/*\n * hat\n * written by James Halliday, licensed under MIT/X11\n * https://github.com/substack/node-hat\n */\nvar hat = module.exports = function (bits, base) {\n    if (!base) base = 16;\n    if (bits === undefined) bits = 128;\n    if (bits <= 0) return '0';\n    \n    var digits = Math.log(Math.pow(2, bits)) / Math.log(base);\n    for (var i = 2; digits === Infinity; i *= 2) {\n        digits = Math.log(Math.pow(2, bits / i)) / Math.log(base) * i;\n    }\n    \n    var rem = digits - Math.floor(digits);\n    \n    var res = '';\n    \n    for (var i = 0; i < Math.floor(digits); i++) {\n        var x = Math.floor(Math.random() * base).toString(base);\n        res = x + res;\n    }\n    \n    if (rem) {\n        var b = Math.pow(base, rem);\n        var x = Math.floor(Math.random() * b).toString(base);\n        res = x + res;\n    }\n    \n    var parsed = parseInt(res, base);\n    if (parsed !== Infinity && parsed >= Math.pow(2, bits)) {\n        return hat(bits, base)\n    }\n    else return res;\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/mapbox/vendor/hat.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/mapbox/vendor/hat.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/mapbox/vendor/hat.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/mapbox/vendor/hat.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/mapbox/vendor/hat.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/mapbox/vendor/hat.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/mapbox/vendor/hat.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/mapbox/vendor/hat.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/mapbox/vendor/hat.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/mapbox/vendor/hat.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/mapbox/vendor/hat.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/mapbox/vendor/hat.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/mapbox/vendor/hat.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/mapbox/vendor/hat.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/mapbox/vendor/hat.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/mapbox/vendor/hat.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/mapbox/vendor/hat.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/mapbox/vendor/hat.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/mapbox/vendor/hat.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/mapbox/vendor/hat.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/mapbox/vendor/hat.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/mapbox/vendor/hat.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/mapbox/vendor/hat.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/mapbox/vendor/hat.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/mapbox/vendor/hat.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/mapbox/vendor/hat.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/mapbox/vendor/hat.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/mapbox/vendor/hat.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/mapbox/vendor/hat.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/mapbox/vendor/hat.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/mapbox/vendor/hat.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/mapbox/vendor/hat.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/mapbox/vendor/hat.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/mapbox/vendor/hat.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/mapbox/vendor/hat.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/mapbox/vendor/hat.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/mapbox/vendor/hat.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/mapbox/vendor/hat.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}}],"sources":{"../node_modules/mapbox/vendor/hat.js":"/* eslint-disable */\n/*\n * hat\n * written by James Halliday, licensed under MIT/X11\n * https://github.com/substack/node-hat\n */\nvar hat = module.exports = function (bits, base) {\n    if (!base) base = 16;\n    if (bits === undefined) bits = 128;\n    if (bits <= 0) return '0';\n    \n    var digits = Math.log(Math.pow(2, bits)) / Math.log(base);\n    for (var i = 2; digits === Infinity; i *= 2) {\n        digits = Math.log(Math.pow(2, bits / i)) / Math.log(base) * i;\n    }\n    \n    var rem = digits - Math.floor(digits);\n    \n    var res = '';\n    \n    for (var i = 0; i < Math.floor(digits); i++) {\n        var x = Math.floor(Math.random() * base).toString(base);\n        res = x + res;\n    }\n    \n    if (rem) {\n        var b = Math.pow(base, rem);\n        var x = Math.floor(Math.random() * b).toString(base);\n        res = x + res;\n    }\n    \n    var parsed = parseInt(res, base);\n    if (parsed !== Infinity && parsed >= Math.pow(2, bits)) {\n        return hat(bits, base)\n    }\n    else return res;\n};\n"},"lineCount":38}},"error":null,"hash":"7048f4b078e94e884f2424085bfc628c","cacheData":{"env":{}}}