{"id":"../node_modules/rest/util/attempt.js","dependencies":[{"name":"C:\\Users\\nicol\\apx-dwf\\dwf-m7\\pet-finder-nicolascasmuz\\package.json","includedInParent":true,"mtime":1710894159098},{"name":"C:\\Users\\nicol\\apx-dwf\\dwf-m7\\pet-finder-nicolascasmuz\\node_modules\\rest\\package.json","includedInParent":true,"mtime":1710894049954}],"generated":{"js":"/*\n * Copyright 2015-2016 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n\n'use strict';\n\n/**\n * Attempt to invoke a function capturing the resulting value as a Promise\n *\n * If the method throws, the caught value used to reject the Promise.\n *\n * @param {function} work function to invoke\n * @returns {Promise} Promise for the output of the work function\n */\nfunction attempt(work) {\n\ttry {\n\t\treturn Promise.resolve(work());\n\t}\n\tcatch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\nmodule.exports = attempt;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/rest/util/attempt.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/rest/util/attempt.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/rest/util/attempt.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/rest/util/attempt.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/rest/util/attempt.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/rest/util/attempt.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/rest/util/attempt.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/rest/util/attempt.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/rest/util/attempt.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/rest/util/attempt.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/rest/util/attempt.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/rest/util/attempt.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/rest/util/attempt.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/rest/util/attempt.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/rest/util/attempt.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/rest/util/attempt.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/rest/util/attempt.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/rest/util/attempt.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/rest/util/attempt.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/rest/util/attempt.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/rest/util/attempt.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/rest/util/attempt.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/rest/util/attempt.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/rest/util/attempt.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/rest/util/attempt.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/rest/util/attempt.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/rest/util/attempt.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/rest/util/attempt.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}}],"sources":{"../node_modules/rest/util/attempt.js":"/*\n * Copyright 2015-2016 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n\n'use strict';\n\n/**\n * Attempt to invoke a function capturing the resulting value as a Promise\n *\n * If the method throws, the caught value used to reject the Promise.\n *\n * @param {function} work function to invoke\n * @returns {Promise} Promise for the output of the work function\n */\nfunction attempt(work) {\n\ttry {\n\t\treturn Promise.resolve(work());\n\t}\n\tcatch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\nmodule.exports = attempt;\n"},"lineCount":28}},"error":null,"hash":"a29ca9488b4e30bcb44fa7412a9dace6","cacheData":{"env":{}}}