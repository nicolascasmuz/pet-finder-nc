{"id":"../node_modules/rest/interceptor/mime.js","dependencies":[{"name":"C:\\Users\\nicol\\apx-dwf\\dwf-m7\\pet-finder-nicolascasmuz\\package.json","includedInParent":true,"mtime":1710894159098},{"name":"C:\\Users\\nicol\\apx-dwf\\dwf-m7\\pet-finder-nicolascasmuz\\node_modules\\rest\\package.json","includedInParent":true,"mtime":1710894049954},{"name":"../interceptor","loc":{"line":12,"column":22,"index":248},"parent":"C:\\Users\\nicol\\apx-dwf\\dwf-m7\\pet-finder-nicolascasmuz\\node_modules\\rest\\interceptor\\mime.js","resolved":"C:\\Users\\nicol\\apx-dwf\\dwf-m7\\pet-finder-nicolascasmuz\\node_modules\\rest\\interceptor.js"},{"name":"../mime","loc":{"line":13,"column":15,"index":282},"parent":"C:\\Users\\nicol\\apx-dwf\\dwf-m7\\pet-finder-nicolascasmuz\\node_modules\\rest\\interceptor\\mime.js","resolved":"C:\\Users\\nicol\\apx-dwf\\dwf-m7\\pet-finder-nicolascasmuz\\node_modules\\rest\\mime.js"},{"name":"../mime/registry","loc":{"line":14,"column":19,"index":313},"parent":"C:\\Users\\nicol\\apx-dwf\\dwf-m7\\pet-finder-nicolascasmuz\\node_modules\\rest\\interceptor\\mime.js","resolved":"C:\\Users\\nicol\\apx-dwf\\dwf-m7\\pet-finder-nicolascasmuz\\node_modules\\rest\\mime\\registry.js"},{"name":"../util/attempt","loc":{"line":15,"column":18,"index":352},"parent":"C:\\Users\\nicol\\apx-dwf\\dwf-m7\\pet-finder-nicolascasmuz\\node_modules\\rest\\interceptor\\mime.js","resolved":"C:\\Users\\nicol\\apx-dwf\\dwf-m7\\pet-finder-nicolascasmuz\\node_modules\\rest\\util\\attempt.js"}],"generated":{"js":"/*\n * Copyright 2012-2016 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n\n'use strict';\n\nvar interceptor, mime, registry, noopConverter, missingConverter, attempt;\n\ninterceptor = require('../interceptor');\nmime = require('../mime');\nregistry = require('../mime/registry');\nattempt = require('../util/attempt');\n\nnoopConverter = {\n\tread: function (obj) { return obj; },\n\twrite: function (obj) { return obj; }\n};\n\nmissingConverter = {\n\tread: function () { throw 'No read method found on converter'; },\n\twrite: function () { throw 'No write method found on converter'; }\n};\n\n/**\n * MIME type support for request and response entities.  Entities are\n * (de)serialized using the converter for the MIME type.\n *\n * Request entities are converted using the desired converter and the\n * 'Accept' request header prefers this MIME.\n *\n * Response entities are converted based on the Content-Type response header.\n *\n * @param {Client} [client] client to wrap\n * @param {string} [config.mime='text/plain'] MIME type to encode the request\n *   entity\n * @param {string} [config.accept] Accept header for the request\n * @param {Client} [config.client=<request.originator>] client passed to the\n *   converter, defaults to the client originating the request\n * @param {Registry} [config.registry] MIME registry, defaults to the root\n *   registry\n * @param {boolean} [config.permissive] Allow an unkown request MIME type\n *\n * @returns {Client}\n */\nmodule.exports = interceptor({\n\tinit: function (config) {\n\t\tconfig.registry = config.registry || registry;\n\t\treturn config;\n\t},\n\trequest: function (request, config) {\n\t\tvar type, headers;\n\n\t\theaders = request.headers || (request.headers = {});\n\t\ttype = mime.parse(headers['Content-Type'] || config.mime || 'text/plain');\n\t\theaders.Accept = headers.Accept || config.accept || type.raw + ', application/json;q=0.8, text/plain;q=0.5, */*;q=0.2';\n\n\t\tif (!('entity' in request)) {\n\t\t\treturn request;\n\t\t}\n\n\t\theaders['Content-Type'] = type.raw;\n\n\t\treturn config.registry.lookup(type)['catch'](function () {\n\t\t\t// failed to resolve converter\n\t\t\tif (config.permissive) {\n\t\t\t\treturn noopConverter;\n\t\t\t}\n\t\t\tthrow 'mime-unknown';\n\t\t}).then(function (converter) {\n\t\t\tvar client = config.client || request.originator,\n\t\t\t\twrite = converter.write || missingConverter.write;\n\n\t\t\treturn attempt(write.bind(void 0, request.entity, { client: client, request: request, mime: type, registry: config.registry }))\n\t\t\t\t['catch'](function() {\n\t\t\t\t\tthrow 'mime-serialization';\n\t\t\t\t})\n\t\t\t\t.then(function(entity) {\n\t\t\t\t\trequest.entity = entity;\n\t\t\t\t\treturn request;\n\t\t\t\t});\n\t\t});\n\t},\n\tresponse: function (response, config) {\n\t\tif (!(response.headers && response.headers['Content-Type'] && response.entity)) {\n\t\t\treturn response;\n\t\t}\n\n\t\tvar type = mime.parse(response.headers['Content-Type']);\n\n\t\treturn config.registry.lookup(type)['catch'](function () { return noopConverter; }).then(function (converter) {\n\t\t\tvar client = config.client || response.request && response.request.originator,\n\t\t\t\tread = converter.read || missingConverter.read;\n\n\t\t\treturn attempt(read.bind(void 0, response.entity, { client: client, response: response, mime: type, registry: config.registry }))\n\t\t\t\t['catch'](function (e) {\n\t\t\t\t\tresponse.error = 'mime-deserialization';\n\t\t\t\t\tresponse.cause = e;\n\t\t\t\t\tthrow response;\n\t\t\t\t})\n\t\t\t\t.then(function (entity) {\n\t\t\t\t\tresponse.entity = entity;\n\t\t\t\t\treturn response;\n\t\t\t\t});\n\t\t});\n\t}\n});\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/rest/interceptor/mime.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}}],"sources":{"../node_modules/rest/interceptor/mime.js":"/*\n * Copyright 2012-2016 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n\n'use strict';\n\nvar interceptor, mime, registry, noopConverter, missingConverter, attempt;\n\ninterceptor = require('../interceptor');\nmime = require('../mime');\nregistry = require('../mime/registry');\nattempt = require('../util/attempt');\n\nnoopConverter = {\n\tread: function (obj) { return obj; },\n\twrite: function (obj) { return obj; }\n};\n\nmissingConverter = {\n\tread: function () { throw 'No read method found on converter'; },\n\twrite: function () { throw 'No write method found on converter'; }\n};\n\n/**\n * MIME type support for request and response entities.  Entities are\n * (de)serialized using the converter for the MIME type.\n *\n * Request entities are converted using the desired converter and the\n * 'Accept' request header prefers this MIME.\n *\n * Response entities are converted based on the Content-Type response header.\n *\n * @param {Client} [client] client to wrap\n * @param {string} [config.mime='text/plain'] MIME type to encode the request\n *   entity\n * @param {string} [config.accept] Accept header for the request\n * @param {Client} [config.client=<request.originator>] client passed to the\n *   converter, defaults to the client originating the request\n * @param {Registry} [config.registry] MIME registry, defaults to the root\n *   registry\n * @param {boolean} [config.permissive] Allow an unkown request MIME type\n *\n * @returns {Client}\n */\nmodule.exports = interceptor({\n\tinit: function (config) {\n\t\tconfig.registry = config.registry || registry;\n\t\treturn config;\n\t},\n\trequest: function (request, config) {\n\t\tvar type, headers;\n\n\t\theaders = request.headers || (request.headers = {});\n\t\ttype = mime.parse(headers['Content-Type'] || config.mime || 'text/plain');\n\t\theaders.Accept = headers.Accept || config.accept || type.raw + ', application/json;q=0.8, text/plain;q=0.5, */*;q=0.2';\n\n\t\tif (!('entity' in request)) {\n\t\t\treturn request;\n\t\t}\n\n\t\theaders['Content-Type'] = type.raw;\n\n\t\treturn config.registry.lookup(type)['catch'](function () {\n\t\t\t// failed to resolve converter\n\t\t\tif (config.permissive) {\n\t\t\t\treturn noopConverter;\n\t\t\t}\n\t\t\tthrow 'mime-unknown';\n\t\t}).then(function (converter) {\n\t\t\tvar client = config.client || request.originator,\n\t\t\t\twrite = converter.write || missingConverter.write;\n\n\t\t\treturn attempt(write.bind(void 0, request.entity, { client: client, request: request, mime: type, registry: config.registry }))\n\t\t\t\t['catch'](function() {\n\t\t\t\t\tthrow 'mime-serialization';\n\t\t\t\t})\n\t\t\t\t.then(function(entity) {\n\t\t\t\t\trequest.entity = entity;\n\t\t\t\t\treturn request;\n\t\t\t\t});\n\t\t});\n\t},\n\tresponse: function (response, config) {\n\t\tif (!(response.headers && response.headers['Content-Type'] && response.entity)) {\n\t\t\treturn response;\n\t\t}\n\n\t\tvar type = mime.parse(response.headers['Content-Type']);\n\n\t\treturn config.registry.lookup(type)['catch'](function () { return noopConverter; }).then(function (converter) {\n\t\t\tvar client = config.client || response.request && response.request.originator,\n\t\t\t\tread = converter.read || missingConverter.read;\n\n\t\t\treturn attempt(read.bind(void 0, response.entity, { client: client, response: response, mime: type, registry: config.registry }))\n\t\t\t\t['catch'](function (e) {\n\t\t\t\t\tresponse.error = 'mime-deserialization';\n\t\t\t\t\tresponse.cause = e;\n\t\t\t\t\tthrow response;\n\t\t\t\t})\n\t\t\t\t.then(function (entity) {\n\t\t\t\t\tresponse.entity = entity;\n\t\t\t\t\treturn response;\n\t\t\t\t});\n\t\t});\n\t}\n});\n"},"lineCount":110}},"error":null,"hash":"5f66c7de1c45754d281e2e4c2f4ea416","cacheData":{"env":{}}}