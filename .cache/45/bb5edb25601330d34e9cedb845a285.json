{"id":"../node_modules/rest/mime/registry.js","dependencies":[{"name":"C:\\Users\\nicol\\apx-dwf\\dwf-m7\\pet-finder-nicolascasmuz\\package.json","includedInParent":true,"mtime":1710894159098},{"name":"C:\\Users\\nicol\\apx-dwf\\dwf-m7\\pet-finder-nicolascasmuz\\node_modules\\rest\\package.json","includedInParent":true,"mtime":1710894049954},{"name":"../mime","loc":{"line":12,"column":15,"index":186},"parent":"C:\\Users\\nicol\\apx-dwf\\dwf-m7\\pet-finder-nicolascasmuz\\node_modules\\rest\\mime\\registry.js","resolved":"C:\\Users\\nicol\\apx-dwf\\dwf-m7\\pet-finder-nicolascasmuz\\node_modules\\rest\\mime.js"},{"name":"./type/application/hal","loc":{"line":96,"column":45,"index":2307},"parent":"C:\\Users\\nicol\\apx-dwf\\dwf-m7\\pet-finder-nicolascasmuz\\node_modules\\rest\\mime\\registry.js","resolved":"C:\\Users\\nicol\\apx-dwf\\dwf-m7\\pet-finder-nicolascasmuz\\node_modules\\rest\\mime\\type\\application\\hal.js"},{"name":"./type/application/json","loc":{"line":97,"column":46,"index":2381},"parent":"C:\\Users\\nicol\\apx-dwf\\dwf-m7\\pet-finder-nicolascasmuz\\node_modules\\rest\\mime\\registry.js","resolved":"C:\\Users\\nicol\\apx-dwf\\dwf-m7\\pet-finder-nicolascasmuz\\node_modules\\rest\\mime\\type\\application\\json.js"},{"name":"./type/application/x-www-form-urlencoded","loc":{"line":98,"column":63,"index":2473},"parent":"C:\\Users\\nicol\\apx-dwf\\dwf-m7\\pet-finder-nicolascasmuz\\node_modules\\rest\\mime\\registry.js","resolved":"C:\\Users\\nicol\\apx-dwf\\dwf-m7\\pet-finder-nicolascasmuz\\node_modules\\rest\\mime\\type\\application\\x-www-form-urlencoded.js"},{"name":"./type/multipart/form-data","loc":{"line":99,"column":49,"index":2568},"parent":"C:\\Users\\nicol\\apx-dwf\\dwf-m7\\pet-finder-nicolascasmuz\\node_modules\\rest\\mime\\registry.js","resolved":"C:\\Users\\nicol\\apx-dwf\\dwf-m7\\pet-finder-nicolascasmuz\\node_modules\\rest\\mime\\type\\multipart\\form-data.js"},{"name":"./type/text/plain","loc":{"line":100,"column":40,"index":2640},"parent":"C:\\Users\\nicol\\apx-dwf\\dwf-m7\\pet-finder-nicolascasmuz\\node_modules\\rest\\mime\\registry.js","resolved":"C:\\Users\\nicol\\apx-dwf\\dwf-m7\\pet-finder-nicolascasmuz\\node_modules\\rest\\mime\\type\\text\\plain.js"}],"generated":{"js":"/*\n * Copyright 2012-2016 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n\n'use strict';\n\nvar mime, registry;\n\nmime = require('../mime');\n\nfunction Registry(mimes) {\n\n\t/**\n\t * Lookup the converter for a MIME type\n\t *\n\t * @param {string} type the MIME type\n\t * @return a promise for the converter\n\t */\n\tthis.lookup = function lookup(type) {\n\t\tvar parsed;\n\n\t\tparsed = typeof type === 'string' ? mime.parse(type) : type;\n\n\t\tif (mimes[parsed.raw]) {\n\t\t\treturn mimes[parsed.raw];\n\t\t}\n\t\tif (mimes[parsed.type + parsed.suffix]) {\n\t\t\treturn mimes[parsed.type + parsed.suffix];\n\t\t}\n\t\tif (mimes[parsed.type]) {\n\t\t\treturn mimes[parsed.type];\n\t\t}\n\t\tif (mimes[parsed.suffix]) {\n\t\t\treturn mimes[parsed.suffix];\n\t\t}\n\n\t\treturn Promise.reject(new Error('Unable to locate converter for mime \"' + parsed.raw + '\"'));\n\t};\n\n\t/**\n\t * Create a late dispatched proxy to the target converter.\n\t *\n\t * Common when a converter is registered under multiple names and\n\t * should be kept in sync if updated.\n\t *\n\t * @param {string} type mime converter to dispatch to\n\t * @returns converter whose read/write methods target the desired mime converter\n\t */\n\tthis.delegate = function delegate(type) {\n\t\treturn {\n\t\t\tread: function () {\n\t\t\t\tvar args = arguments;\n\t\t\t\treturn this.lookup(type).then(function (converter) {\n\t\t\t\t\treturn converter.read.apply(this, args);\n\t\t\t\t}.bind(this));\n\t\t\t}.bind(this),\n\t\t\twrite: function () {\n\t\t\t\tvar args = arguments;\n\t\t\t\treturn this.lookup(type).then(function (converter) {\n\t\t\t\t\treturn converter.write.apply(this, args);\n\t\t\t\t}.bind(this));\n\t\t\t}.bind(this)\n\t\t};\n\t};\n\n\t/**\n\t * Register a custom converter for a MIME type\n\t *\n\t * @param {string} type the MIME type\n\t * @param converter the converter for the MIME type\n\t * @return a promise for the converter\n\t */\n\tthis.register = function register(type, converter) {\n\t\tmimes[type] = Promise.resolve(converter);\n\t\treturn mimes[type];\n\t};\n\n\t/**\n\t * Create a child registry whoes registered converters remain local, while\n\t * able to lookup converters from its parent.\n\t *\n\t * @returns child MIME registry\n\t */\n\tthis.child = function child() {\n\t\treturn new Registry(Object.create(mimes));\n\t};\n\n}\n\nregistry = new Registry({});\n\n// include provided serializers\nregistry.register('application/hal', require('./type/application/hal'));\nregistry.register('application/json', require('./type/application/json'));\nregistry.register('application/x-www-form-urlencoded', require('./type/application/x-www-form-urlencoded'));\nregistry.register('multipart/form-data', require('./type/multipart/form-data'));\nregistry.register('text/plain', require('./type/text/plain'));\n\nregistry.register('+json', registry.delegate('application/json'));\n\nmodule.exports = registry;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/rest/mime/registry.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/rest/mime/registry.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}}],"sources":{"../node_modules/rest/mime/registry.js":"/*\n * Copyright 2012-2016 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n\n'use strict';\n\nvar mime, registry;\n\nmime = require('../mime');\n\nfunction Registry(mimes) {\n\n\t/**\n\t * Lookup the converter for a MIME type\n\t *\n\t * @param {string} type the MIME type\n\t * @return a promise for the converter\n\t */\n\tthis.lookup = function lookup(type) {\n\t\tvar parsed;\n\n\t\tparsed = typeof type === 'string' ? mime.parse(type) : type;\n\n\t\tif (mimes[parsed.raw]) {\n\t\t\treturn mimes[parsed.raw];\n\t\t}\n\t\tif (mimes[parsed.type + parsed.suffix]) {\n\t\t\treturn mimes[parsed.type + parsed.suffix];\n\t\t}\n\t\tif (mimes[parsed.type]) {\n\t\t\treturn mimes[parsed.type];\n\t\t}\n\t\tif (mimes[parsed.suffix]) {\n\t\t\treturn mimes[parsed.suffix];\n\t\t}\n\n\t\treturn Promise.reject(new Error('Unable to locate converter for mime \"' + parsed.raw + '\"'));\n\t};\n\n\t/**\n\t * Create a late dispatched proxy to the target converter.\n\t *\n\t * Common when a converter is registered under multiple names and\n\t * should be kept in sync if updated.\n\t *\n\t * @param {string} type mime converter to dispatch to\n\t * @returns converter whose read/write methods target the desired mime converter\n\t */\n\tthis.delegate = function delegate(type) {\n\t\treturn {\n\t\t\tread: function () {\n\t\t\t\tvar args = arguments;\n\t\t\t\treturn this.lookup(type).then(function (converter) {\n\t\t\t\t\treturn converter.read.apply(this, args);\n\t\t\t\t}.bind(this));\n\t\t\t}.bind(this),\n\t\t\twrite: function () {\n\t\t\t\tvar args = arguments;\n\t\t\t\treturn this.lookup(type).then(function (converter) {\n\t\t\t\t\treturn converter.write.apply(this, args);\n\t\t\t\t}.bind(this));\n\t\t\t}.bind(this)\n\t\t};\n\t};\n\n\t/**\n\t * Register a custom converter for a MIME type\n\t *\n\t * @param {string} type the MIME type\n\t * @param converter the converter for the MIME type\n\t * @return a promise for the converter\n\t */\n\tthis.register = function register(type, converter) {\n\t\tmimes[type] = Promise.resolve(converter);\n\t\treturn mimes[type];\n\t};\n\n\t/**\n\t * Create a child registry whoes registered converters remain local, while\n\t * able to lookup converters from its parent.\n\t *\n\t * @returns child MIME registry\n\t */\n\tthis.child = function child() {\n\t\treturn new Registry(Object.create(mimes));\n\t};\n\n}\n\nregistry = new Registry({});\n\n// include provided serializers\nregistry.register('application/hal', require('./type/application/hal'));\nregistry.register('application/json', require('./type/application/json'));\nregistry.register('application/x-www-form-urlencoded', require('./type/application/x-www-form-urlencoded'));\nregistry.register('multipart/form-data', require('./type/multipart/form-data'));\nregistry.register('text/plain', require('./type/text/plain'));\n\nregistry.register('+json', registry.delegate('application/json'));\n\nmodule.exports = registry;\n"},"lineCount":105}},"error":null,"hash":"560ad3acf9b357a4869cacac10fc506a","cacheData":{"env":{}}}